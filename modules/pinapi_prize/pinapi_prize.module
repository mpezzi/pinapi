<?php

/**
 * @file
 * Provides a prize to redeemed codes.
 */

require_once dirname(__FILE__) . '/pinapi_prize.inc';

/**
 * Implements hook_perm().
 */
function pinapi_prize_perm() {
  return array(
    'view any redeemed prizes',
    'view own redeemed prizes',
  );
}

/**
 * Implements hook_menu().
 */
function xpinapi_prize_menu() {
  $items['prize/%pinapi_redeemed_prize'] = array(
    'title callback' => 'pinapi_prize_page_title',
    'title arguments' => array(1),
    'page callback' => 'pinapi_prize_page_view',
    'page arguments' => array(1),
    'access callback' => 'pinapi_prize_access',
    'access arguments' => array(1),
    'type' => MENU_CALLBACK,
  );
  
  return $items;
}

/**
 * Implements hook_theme().
 */
function pinapi_prize_theme() {
  return array(
    'pinapi_prize' => array(
      'arguments' => array('prize' => NULL),
      'template' => 'pinapi-prize',
      'path' => drupal_get_path('module', 'pinapi_prize') . '/theme',
      'file' => 'theme.inc',
    ),
  );
}

/**
 * Implements hook_pinapi_codeapi().
 */
function pinapi_prize_pinapi_codeapi($op, &$code, &$group, &$account) {
  // Pre redeem operation, lets check and see if a prize is availble to give out, and pass it back with the code.
  if ( $op == 'pre redeem' ) {
    // Check to see if a prize is available.
    if ( $prize = pinapi_prize_award($group, $account) ) {
      $code->prize = $prize;
    }
    // No prize available, mark code as unredeemable.
    else {
      $code->redeemable = FALSE;
    }
  }

  // The code has been redeemed, we can now redeem the prize.
  if ( $op == 'redeem' && isset($code->prize) ) {
    db_query("INSERT INTO {pinapi_prize_redeemed} (rid, pid) VALUES (%d, %d)", $code->rid, $code->prize->pid);
  }
}

/**
 * Implements hook_pinapi_code_clear().
 */
function pinapi_prize_pinapi_code_clear($gid) {
  db_query("DELETE pr FROM {pinapi_prize_redeemed} pr JOIN {pinapi_prize} p ON pr.pid = p.pid WHERE p.gid = %d", $gid);
}

/**
 * Define redeemed prizes access.
 *
 * @param $prize
 *   A prize object.
 * @param $account
 *   A user account.
 * @return
 *   TRUE or FALSE whether user has access to the prize.
 */
function pinapi_prize_access($prize, $account = NULL) {
  global $user;

  // If no user object is supplied, the access check is for the current user.
  if ( empty($account) ) {
    $account = $user;
  }

  // Check to see if user can view any prize.
  if ( user_access('view any redeemed prizes', $account) ) {
    return TRUE;
  }

  // Check to see if user can view own prize.
  if ( user_access('view own redeemed prizes', $account) && $prize->uid == $account->uid ) {
    return TRUE;
  }

  // User does not have access.
  return FALSE;
}
