<?php

/**
 * @file
 * Provides PinAPI collecting functionality.
 */


/**
 * Implements hook_theme().
 */
function pinapi_collect_theme() {
  return array(
    'pinapi_collect' => array(
      'arguments' => array('group' => NULL, 'account' => NULL),
      'template' => 'pinapi-collect',
      'path' => drupal_get_path('module', 'pinapi_collect') . '/theme',
      'file' => 'theme.inc',
    ),
  );
}

/**
 * Implements hook_block().
 */
function pinapi_collect_block($op = 'list', $delta = 0, $edit = array()) {
  switch ($op) {

    case 'list':
      $blocks = array();
      foreach ( pinapi_group_get_groups() as $group ) {
        $blocks[$group->gid] = array(
          'info' => t('Pin API Collect - !name', array('!name' => $group->name)),
        );
      }
      return $blocks;

    case 'configure':
      if ( user_access('administer pin api') ) {
        $form['pinapi_collect_' . $delta . '_codes_needed'] = array(
          '#type' => 'textfield',
          '#title' => t('Required number of codes'),
          '#description' => t('Number of codes required.'),
          '#size' => 40,
          '#maxlength' => 3,
          '#default_value' => variable_get('pinapi_collect_' . $delta . '_codes_needed', 15),
        );
      }
      return $form;

    case 'save':
      if ( user_access('administer pin api') ) {
        variable_set('pinapi_collect_' . $delta . '_codes_needed', $edit['pinapi_collect_' . $delta . '_codes_needed']);
      }
      break;

    case 'view':
      $block = array();
      if ( user_access('redeem codes') && $group = pinapi_group_load($delta) ) {
        $account = user_load($GLOBALS['user']->uid);
        $block['subject'] = t('Pin API Collect');
        $block['content'] = theme('pinapi_collect', $group, $account);
      }
      return $block;
  }
}

