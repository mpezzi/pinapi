<?php

/**
 * @file
 * Provides simple PayPal integration.
 */

require_once dirname(__FILE__) . '/pinapi_paypal.inc';

/**
 * Implements hook_menu().
 */
function pinapi_paypal_menu() {
  return array(
    'pinapi/paypal' => array(
      'title' => 'Pinapi Paypal',
      'page callback' => 'pinapi_paypal_view',
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK,
    ),
    'pinapi/paypal/ipn' => array(
      'page callback' => 'pinapi_paypal_ipn',
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK,
    ),
  );
}

/**
 * Page Callback: Paypal View.
 */
function pinapi_paypal_view() {
  
}

/**
 * Page Callback: Paypal Instant Payment Notification.
 */
function pinapi_paypal_ipn() {
  module_load_include('php', 'pinapi_paypal', 'lib/ipnlistener');

  // Load PHP-Paypal-IPN library.
  $ipn = new IpnListener();
  $ipn->use_sandbox = variable_get('pinapi_paypal_sandbox', TRUE);

  // Debug IPN.
  if ( variable_get('pinapi_paypal_debug', FALSE) ) {
    watchdog('pinapi_paypal', 'IPN Debug ' . json_encode($_POST));
  }

  // Try to verify the IPN and catch and log errors.
  try {
    $ipn->requirePostMethod();
    $verified = $ipn->processIpn();
  } catch ( Exception $e ) {
    watchdog('pinapi_paypal', 'IPN Error ' . $e->getMessage(), array(), WATCHDOG_ERROR);
  }

  // IPN is verified, continue with data checks.
  if ( $verified ) {

    // Load current transaction if it already exists.
    $order = pinapi_paypal_order_load($_POST['txn_id']);

    // Check for fraudulent transaction attempts.
    $errors = array();

    // Ensure receiver email is ours.
    if ( $_POST['receiver_email'] != variable_get('pinapi_paypal_receiver_email', '') ) {
      $error['receiver_email'] = t('Merchant account is not same as systems.');
    }

    if ( count($errors) == 0 ) {

      // Order doesn't exists yet set default settings.
      if ( !$order ) {
        $order = (object) array(
          'txnid' => $_POST['txn_id'],
          'uid' => 1,
          'payer_email' => $_POST['payer_email'],
          'mc_gross' => $_POST['mc_gross'],
        );
      }

      // Update payment status and save order.
      $order->payment_status = $_POST['payment_status'];
      pinapi_paypal_order_save($order);

      watchdog('pinapi_paypal', 'IPN Verified ' . $ipn->getTextReport());
    }
    else {
      watchdog('pinapi_paypal', 'IPN Error ' . implode(', ', $errors), array(), WATCHDOG_WARNING);
    }
  }
  else {
    watchdog('pinapi_paypal', 'IPN Invalid ' . $ipn->getTextReport(), array(), WATCHDOG_WARNING);
  }
}
